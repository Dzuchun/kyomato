Наступний тест. Тут протестуємо таблиці і блоки коду.
\subsubsection{Таблиці}

\tbln Звичайні таблиці; Можуть всередині мати\textbf{формули}чи\textit{посилання}на інші штуки
\begin{table}[h!]
\begin{center}
\begin{tabular}{|c|c|c|}\hline
Storage & Space & Number\\ \hline
\hline
1 & 2 & $3 + e ^{\pi}$\\ \hline
$e$\footnotemark[1]\footnotetext[1]{Це число Ейлера. Воно дуже корисне,\st{але не може бути записане}у вигляді\textit{десяткового}дробу.} & $\cdot \pm 1$ & І тут ще\textit{трохи}тексту \|\\ \hline
\end{tabular}
\stepcounter{tabnum}
\caption{\capfnt Оце приклад таблиці. Як казав мій вчитель:\textbf{ВИКОРИСТОВУЙ БІЛЬШЕ ВИБУХІВКИ}(і "лапок")}
\label{tab:example_1}
\end{center}
\end{table}

\tbln Таблиця цілком собі може не мати ідентифікатора або опису:
\begin{table}[h!]
\begin{center}
\begin{tabular}{|c|c|}\hline
Кількість & Роль\\ \hline
\hline
3 діоптрії & 7 галон\\ \hline
rust & #PANIC!!!\\ \hline
\end{tabular}
\stepcounter{tabnum}\label{tab:table_2}
\end{center}
\end{table}

\subsubsection{Блоки коду}

\tbln Наразі мають досить обмежену підтримку, адже у$\LaTeX$немає нативного поняття блоків коду.
\tbln На щастя, у\textbf{markdown}таке поняття є\footnotemark[2]\footnotetext[2]{Принаймні,\textit{Obsidian}таке робить}:
\begin{minted}{rust}
let x = 5;
let y = x.powi(2);
let z = (y as f64).sqrt();
println!("x = {x}, y = {y}, z = {x}");
\end{minted}

